// Code generated by yaml_to_go. DO NOT EDIT.
// source: ssz_Mainnet_one.yaml

package autogenerated

type MainnetAttestation struct {
	AggregationBitfield []byte                 `json:"aggregation_bitfield"`
	Data                MainnetAttestationData `json:"data"`
	CustodyBitfield     []byte                 `json:"custody_bitfield"`
	Signature           []byte                 `json:"signature" ssz:"size=96"`
}

type MainnetAttestationData struct {
	BeaconBlockRoot []byte           `json:"beacon_block_root" ssz:"size=32"`
	SourceEpoch     uint64           `json:"source_epoch"`
	SourceRoot      []byte           `json:"source_root" ssz:"size=32"`
	TargetEpoch     uint64           `json:"target_epoch"`
	TargetRoot      []byte           `json:"target_root" ssz:"size=32"`
	Crosslink       MainnetCrosslink `json:"crosslink"`
}

type MainnetAttestationAndCustodyBit struct {
	Data       MainnetAttestationData `json:"data"`
	CustodyBit bool                   `json:"custody_bit"`
}

type MainnetIndexedAttestation struct {
	CustodyBit0Indices []uint64               `json:"custody_bit_0_indices"`
	CustodyBit1Indices []uint64               `json:"custody_bit_1_indices"`
	Data               MainnetAttestationData `json:"data"`
	Signature          []byte                 `json:"signature" ssz:"size=96"`
}

type MainnetPendingAttestation struct {
	AggregationBitfield []byte                 `json:"aggregation_bitfield"`
	Data                MainnetAttestationData `json:"data"`
	InclusionDelay      uint64                 `json:"inclusion_delay"`
	ProposerIndex       uint64                 `json:"proposer_index"`
}

type MainnetAttesterSlashing struct {
	Attestation1 MainnetIndexedAttestation `json:"attestation_1"`
	Attestation2 MainnetIndexedAttestation `json:"attestation_2"`
}

type MainnetCrosslink struct {
	Shard      uint64 `json:"shard"`
	StartEpoch uint64 `json:"start_epoch"`
	EndEpoch   uint64 `json:"end_epoch"`
	ParentRoot []byte `json:"parent_root" ssz:"size=32"`
	DataRoot   []byte `json:"data_root" ssz:"size=32"`
}

type MainnetEth1Data struct {
	DepositRoot  []byte `json:"deposit_root" ssz:"size=32"`
	DepositCount uint64 `json:"deposit_count"`
	BlockHash    []byte `json:"block_hash" ssz:"size=32"`
}

type MainnetBlockHeader struct {
	Slot       uint64 `json:"slot"`
	ParentRoot []byte `json:"parent_root" ssz:"size=32"`
	StateRoot  []byte `json:"state_root" ssz:"size=32"`
	BodyRoot   []byte `json:"body_root" ssz:"size=32"`
	Signature  []byte `json:"signature" ssz:"size=96"`
}

type MainnetProposerSlashing struct {
	ProposerIndex uint64             `json:"proposer_index"`
	Header1       MainnetBlockHeader `json:"header_1"`
	Header2       MainnetBlockHeader `json:"header_2"`
}

type MainnetDeposit struct {
	Proof [][]byte           `json:"proof" ssz:"size=32,32"`
	Data  MainnetDepositData `json:"data"`
}

type MainnetDepositData struct {
	Pubkey                []byte `json:"pubkey" ssz:"size=48"`
	WithdrawalCredentials []byte `json:"withdrawal_credentials" ssz:"size=32"`
	Amount                uint64 `json:"amount"`
	Signature             []byte `json:"signature" ssz:"size=96"`
}

type MainnetVoluntaryExit struct {
	Epoch          uint64 `json:"epoch"`
	ValidatorIndex uint64 `json:"validator_index"`
	Signature      []byte `json:"signature" ssz:"size=96"`
}

type MainnetTransfer struct {
	Sender    uint64 `json:"sender"`
	Recipient uint64 `json:"recipient"`
	Amount    uint64 `json:"amount"`
	Fee       uint64 `json:"fee"`
	Slot      uint64 `json:"slot"`
	Pubkey    []byte `json:"pubkey" ssz:"size=48"`
	Signature []byte `json:"signature" ssz:"size=96"`
}

type MainnetBlockBody struct {
	RandaoReveal      []byte                    `json:"randao_reveal" ssz:"size=96"`
	Eth1Data          MainnetEth1Data           `json:"eth1_data"`
	Graffiti          []byte                    `json:"graffiti" ssz:"size=32"`
	ProposerSlashings []MainnetProposerSlashing `json:"proposer_slashings"`
	AttesterSlashings []MainnetAttesterSlashing `json:"attester_slashings"`
	Attestations      []MainnetAttestation      `json:"attestations"`
	Deposits          []MainnetDeposit          `json:"deposits"`
	VoluntaryExits    []MainnetVoluntaryExit    `json:"voluntary_exits"`
	Transfers         []MainnetTransfer         `json:"transfers"`
}

type MainnetBlock struct {
	Slot       uint64           `json:"slot"`
	ParentRoot []byte           `json:"parent_root" ssz:"size=32"`
	StateRoot  []byte           `json:"state_root" ssz:"size=32"`
	Body       MainnetBlockBody `json:"body"`
	Signature  []byte           `json:"signature" ssz:"size=96"`
}

type MainnetValidator struct {
	Pubkey                     []byte `json:"pubkey" ssz:"size=48"`
	WithdrawalCredentials      []byte `json:"withdrawal_credentials" ssz:"size=32"`
	ActivationEligibilityEpoch uint64 `json:"activation_eligibility_epoch"`
	ActivationEpoch            uint64 `json:"activation_epoch"`
	ExitEpoch                  uint64 `json:"exit_epoch"`
	WithdrawableEpoch          uint64 `json:"withdrawable_epoch"`
	Slashed                    bool   `json:"slashed"`
	EffectiveBalance           uint64 `json:"effective_balance"`
}

type MainnetHistoricalBatch struct {
	BlockRoots [][]byte `json:"block_roots" ssz:"size=8192,32"`
	StateRoots [][]byte `json:"state_roots" ssz:"size=8192,32"`
}

type MainnetFork struct {
	PreviousVersion []byte `json:"previous_version" ssz:"size=4"`
	CurrentVersion  []byte `json:"current_version" ssz:"size=4"`
	Epoch           uint64 `json:"epoch"`
}

type MainnetBeaconState struct {
	Slot                      uint64                      `json:"slot"`
	GenesisTime               uint64                      `json:"genesis_time"`
	Fork                      MainnetFork                 `json:"fork"`
	ValidatorRegistry         []MainnetValidator          `json:"validator_registry"`
	Balances                  []uint64                    `json:"balances"`
	LatestRandaoMixes         [][]byte                    `json:"latest_randao_mixes" ssz:"size=8192,32"`
	LatestStartShard          uint64                      `json:"latest_start_shard"`
	PreviousEpochAttestations []MainnetPendingAttestation `json:"previous_epoch_attestations"`
	CurrentEpochAttestations  []MainnetPendingAttestation `json:"current_epoch_attestations"`
	PreviousJustifiedEpoch    uint64                      `json:"previous_justified_epoch"`
	CurrentJustifiedEpoch     uint64                      `json:"current_justified_epoch"`
	PreviousJustifiedRoot     []byte                      `json:"previous_justified_root" ssz:"size=32"`
	CurrentJustifiedRoot      []byte                      `json:"current_justified_root" ssz:"size=32"`
	JustificationBitfield     uint64                      `json:"justification_bitfield"`
	FinalizedEpoch            uint64                      `json:"finalized_epoch"`
	FinalizedRoot             []byte                      `json:"finalized_root" ssz:"size=32"`
	CurrentCrosslinks         []MainnetCrosslink          `json:"current_crosslinks" ssz:"size=1024"`
	PreviousCrosslinks        []MainnetCrosslink          `json:"previous_crosslinks" ssz:"size=1024"`
	LatestBlockRoots          [][]byte                    `json:"latest_block_roots" ssz:"size=8192,32"`
	LatestStateRoots          [][]byte                    `json:"latest_state_roots" ssz:"size=8192,32"`
	LatestActiveIndexRoots    [][]byte                    `json:"latest_active_index_roots" ssz:"size=8192,32"`
	LatestSlashedBalances     []uint64                    `json:"latest_slashed_balances" ssz:"size=8192"`
	LatestBlockHeader         MainnetBlockHeader          `json:"latest_block_header"`
	HistoricalRoots           [][]byte                    `json:"historical_roots" ssz:"size=?,32"`
	LatestEth1Data            MainnetEth1Data             `json:"latest_eth1_data"`
	Eth1DataVotes             []MainnetEth1Data           `json:"eth1_data_votes"`
	DepositIndex              uint64                      `json:"deposit_index"`
}
type SszMainnetTest struct {
	Title         string   `json:"title"`
	Summary       string   `json:"summary"`
	ForksTimeline string   `json:"forks_timeline"`
	Forks         []string `json:"forks"`
	Config        string   `json:"config"`
	Runner        string   `json:"runner"`
	Handler       string   `json:"handler"`
	TestCases     []struct {
		Attestation struct {
			Value       MainnetAttestation `json:"value"`
			Serialized  []byte             `json:"serialized"`
			Root        []byte             `json:"root" ssz:"size=32"`
			SigningRoot []byte             `json:"signing_root" ssz:"size=32"`
		} `json:"Attestation,omitempty"`
		AttestationData struct {
			Value      MainnetAttestationData `json:"value"`
			Serialized []byte                 `json:"serialized"`
			Root       []byte                 `json:"root" ssz:"size=32"`
		} `json:"AttestationData,omitempty"`
		AttestationDataAndCustodyBit struct {
			Value      MainnetAttestationAndCustodyBit `json:"value"`
			Serialized []byte                          `json:"serialized"`
			Root       []byte                          `json:"root" ssz:"size=32"`
		} `json:"AttestationDataAndCustodyBit,omitempty"`
		AttesterSlashing struct {
			Value      MainnetAttesterSlashing `json:"value"`
			Serialized []byte                  `json:"serialized"`
			Root       []byte                  `json:"root" ssz:"size=32"`
		} `json:"AttesterSlashing,omitempty"`
		BeaconBlock struct {
			Value       MainnetBlock `json:"value"`
			Serialized  []byte       `json:"serialized"`
			Root        []byte       `json:"root" ssz:"size=32"`
			SigningRoot []byte       `json:"signing_root" ssz:"size=32"`
		} `json:"BeaconBlock,omitempty"`
		BeaconBlockBody struct {
			Value      MainnetBlockBody `json:"value"`
			Serialized []byte           `json:"serialized"`
			Root       []byte           `json:"root" ssz:"size=32"`
		} `json:"BeaconBlockBody,omitempty"`
		BeaconBlockHeader struct {
			Value       MainnetBlockHeader `json:"value"`
			Serialized  []byte             `json:"serialized"`
			Root        []byte             `json:"root" ssz:"size=32"`
			SigningRoot []byte             `json:"signing_root" ssz:"size=32"`
		} `json:"BeaconBlockHeader,omitempty"`
		BeaconState struct {
			Value      MainnetBeaconState `json:"value"`
			Serialized []byte             `json:"serialized"`
			Root       []byte             `json:"root" ssz:"size=32"`
		} `json:"BeaconState,omitempty"`
		Crosslink struct {
			Value      MainnetCrosslink `json:"value"`
			Serialized []byte           `json:"serialized"`
			Root       []byte           `json:"root" ssz:"size=32"`
		} `json:"Crosslink,omitempty"`
		Deposit struct {
			Value      MainnetDeposit `json:"value"`
			Serialized []byte         `json:"serialized"`
			Root       []byte         `json:"root" ssz:"size=32"`
		} `json:"Deposit,omitempty"`
		DepositData struct {
			Value       MainnetDepositData `json:"value"`
			Serialized  []byte             `json:"serialized"`
			Root        []byte             `json:"root" ssz:"size=32"`
			SigningRoot []byte             `json:"signing_root" ssz:"size=32"`
		} `json:"DepositData,omitempty"`
		Eth1Data struct {
			Value      MainnetEth1Data `json:"value"`
			Serialized []byte          `json:"serialized"`
			Root       []byte          `json:"root" ssz:"size=32"`
		} `json:"Eth1Data,omitempty"`
		Fork struct {
			Value      MainnetFork `json:"value"`
			Serialized []byte      `json:"serialized"`
			Root       []byte      `json:"root" ssz:"size=32"`
		} `json:"Fork,omitempty"`
		HistoricalBatch struct {
			Value      MainnetHistoricalBatch `json:"value"`
			Serialized []byte                 `json:"serialized"`
			Root       []byte                 `json:"root" ssz:"size=32"`
		} `json:"HistoricalBatch,omitempty"`
		IndexedAttestation struct {
			Value       MainnetIndexedAttestation `json:"value"`
			Serialized  []byte                    `json:"serialized"`
			Root        []byte                    `json:"root" ssz:"size=32"`
			SigningRoot []byte                    `json:"signing_root" ssz:"size=32"`
		} `json:"IndexedAttestation,omitempty"`
		PendingAttestation struct {
			Value      MainnetPendingAttestation `json:"value"`
			Serialized []byte                    `json:"serialized"`
			Root       []byte                    `json:"root" ssz:"size=32"`
		} `json:"PendingAttestation,omitempty"`
		ProposerSlashing struct {
			Value      MainnetProposerSlashing `json:"value"`
			Serialized []byte                  `json:"serialized"`
			Root       []byte                  `json:"root" ssz:"size=32"`
		} `json:"ProposerSlashing,omitempty"`
		Transfer struct {
			Value       MainnetTransfer `json:"value"`
			Serialized  []byte          `json:"serialized"`
			Root        []byte          `json:"root" ssz:"size=32"`
			SigningRoot []byte          `json:"signing_root" ssz:"size=32"`
		} `json:"Transfer,omitempty"`
		Validator struct {
			Value      MainnetValidator `json:"value"`
			Serialized []byte           `json:"serialized"`
			Root       []byte           `json:"root" ssz:"size=32"`
		} `json:"Validator,omitempty"`
		VoluntaryExit struct {
			Value       MainnetVoluntaryExit `json:"value"`
			Serialized  []byte               `json:"serialized"`
			Root        []byte               `json:"root" ssz:"size=32"`
			SigningRoot []byte               `json:"signing_root" ssz:"size=32"`
		} `json:"VoluntaryExit,omitempty"`
	} `json:"test_cases"`
}

type SszBenchmarkState struct {
	Value      MainnetBeaconState `json:"value"`
	Serialized []byte             `json:"serialized"`
	Root       []byte             `json:"root" ssz:"size=32"`
}

type SszBenchmarkBlock struct {
	Value       MainnetBlock `json:"value"`
	Serialized  []byte       `json:"serialized"`
	Root        []byte       `json:"root" ssz:"size=32"`
	SigningRoot []byte       `json:"signing_root" ssz:"size=32"`
}
